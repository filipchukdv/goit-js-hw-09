{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAiBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACLN,EACFI,EAAI,uBAAqBN,QAAiBC,OAExCM,EAAE,sBAAoBP,QAAeC,MAAU,GAElDA,EAAM,G,CAxBGQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAqBC,GACnBA,EAAEC,iBACF,MAAMC,OAAEA,EAAMb,MAAEA,EAAKc,KAAEA,GAASH,EAAEI,OAAOC,SACzC,IAAIC,EAAaC,OAAOlB,EAAMmB,OAC9B,IAAK,IAAIC,EAAI,EAAGA,GAAKP,EAAOM,MAAOC,GAAK,EACtCtB,EAAcsB,EAAGH,GACdI,MAAKF,GAASvB,EAAA0B,OAAOC,QAAQJ,KAC7BK,OAAMC,GAAS7B,EAAA0B,OAAOI,QAAQD,KACjCR,GAAcC,OAAOJ,EAAKK,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onFormClick);\n\nfunction onFormClick(e) {\n  e.preventDefault();\n  const { amount, delay, step } = e.target.elements;\n  let totalDelay = Number(delay.value);\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, totalDelay)\n      .then(value => Notify.success(value))\n      .catch(error => Notify.failure(error));\n    totalDelay += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","document","querySelector","addEventListener","e","preventDefault","amount","step","target","elements","totalDelay","Number","value","i","then","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.90afb456.js.map"}