{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAgBA,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCN,EAAAO,OAAOC,QAAQ,uBAAqBL,QAAiBC,OAErDJ,EAAAO,OAAOE,QAAQ,sBAAoBN,QAAeC,M,CAnBtCM,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAqBC,GACnBA,EAAEC,iBACF,MAAMC,OAAEA,EAAMX,MAAEA,EAAKY,KAAEA,GAASH,EAAEI,OAAOC,SACzC,IAAIC,EAAaC,OAAOhB,EAAMiB,OAC9B,IAAK,IAAIC,EAAI,EAAGA,GAAKP,EAAOM,MAAOC,GAAK,EACtCC,WAAWrB,EAAeiB,EAAYG,EAAGH,GACzCK,QAAQC,IAAI,eAAgBN,GAC5BA,GAAcC,OAAOJ,EAAKK,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onFormClick);\n\nfunction onFormClick(e) {\n  e.preventDefault();\n  const { amount, delay, step } = e.target.elements;\n  let totalDelay = Number(delay.value);\n  for (let i = 1; i <= amount.value; i += 1) {\n    setTimeout(createPromise, totalDelay, i, totalDelay);\n    console.log('totalDelay :', totalDelay);\n    totalDelay += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Math","random","Notify","success","failure","document","querySelector","addEventListener","e","preventDefault","amount","step","target","elements","totalDelay","Number","value","i","setTimeout","console","log"],"version":3,"file":"03-promises.2ee254a3.js.map"}