{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAgBA,SAASC,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCN,EAAAO,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANL,EAAM,OAE7DJ,EAAAO,OAAOG,QAAQ,sBAAqCD,OAAfN,EAAS,QAAYM,OAANL,EAAM,M,CAnB9CO,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAqBC,GACnBA,EAAEC,iBAGF,IAFA,IAAgCC,EAAAF,EAAEG,OAAOC,SAAjCC,EAAwBH,EAAxBG,OAAQf,EAAgBY,EAAhBZ,MAAOgB,EAASJ,EAATI,KACnBC,EAAaC,OAAOlB,EAAMmB,OACrBC,EAAI,EAAGA,GAAKL,EAAOI,MAAOC,GAAK,EACtCC,WAAWvB,EAAemB,EAAYG,EAAGH,GACzCK,QAAQC,IAAI,eAAgBN,GAC5BA,GAAcC,OAAOF,EAAKG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onFormClick);\n\nfunction onFormClick(e) {\n  e.preventDefault();\n  const { amount, delay, step } = e.target.elements;\n  let totalDelay = Number(delay.value);\n  for (let i = 1; i <= amount.value; i += 1) {\n    setTimeout(createPromise, totalDelay, i, totalDelay);\n    console.log('totalDelay :', totalDelay);\n    totalDelay += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","Notify","success","concat","failure","document","querySelector","addEventListener","e","preventDefault","_elements","target","elements","amount","step","totalDelay","Number","value","i","setTimeout","console","log"],"version":3,"file":"03-promises.612e5081.js.map"}