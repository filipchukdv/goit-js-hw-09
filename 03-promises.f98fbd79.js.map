{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAiBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACLN,EACFI,EAAI,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEhDM,EAAE,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEhDA,E,IAxBSS,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAqBC,GACnBA,EAAEC,iBAGF,IAFA,IAAgCC,EAAAF,EAAEG,OAAOC,SAAjCC,EAAwBH,EAAxBG,OAAQjB,EAAgBc,EAAhBd,MAAOkB,EAASJ,EAATI,KACnBC,EAAaC,OAAOpB,EAAMqB,OACrBC,EAAI,EAAGA,GAAKL,EAAOI,MAAOC,GAAK,EACtCxB,EAAcwB,EAAGH,GACdI,MAAK,SAAAF,G,OAASzB,EAAA4B,OAAOC,QAAQJ,E,IAC7BK,OAAM,SAAAC,G,OAAS/B,EAAA4B,OAAOI,QAAQD,E,IACjCR,GAAcC,OAAOF,EAAKG,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onFormClick);\n\nfunction onFormClick(e) {\n  e.preventDefault();\n  const { amount, delay, step } = e.target.elements;\n  let totalDelay = Number(delay.value);\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, totalDelay)\n      .then(value => Notify.success(value))\n      .catch(error => Notify.failure(error));\n    totalDelay += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","concat","document","querySelector","addEventListener","e","preventDefault","_elements","target","elements","amount","step","totalDelay","Number","value","i","then","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.f98fbd79.js.map"}